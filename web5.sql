-- phpMyAdmin SQL Dump
-- version 4.9.2
-- https://www.phpmyadmin.net/
--
-- Máy chủ: 127.0.0.1:3306
-- Thời gian đã tạo: Th7 15, 2020 lúc 06:16 AM
-- Phiên bản máy phục vụ: 10.4.10-MariaDB
-- Phiên bản PHP: 7.3.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Cơ sở dữ liệu: `web`
--

-- --------------------------------------------------------

--
-- Cấu trúc bảng cho bảng `document`
--

DROP TABLE IF EXISTS `document`;
CREATE TABLE IF NOT EXISTS `document` (
  `MaMH` varchar(30) CHARACTER SET utf8 NOT NULL,
  `TenMH` varchar(200) CHARACTER SET utf8 NOT NULL,
  `Phan1` text CHARACTER SET utf8 NOT NULL,
  `Phan2` text CHARACTER SET utf8 DEFAULT NULL,
  `Phan3` text CHARACTER SET utf8 DEFAULT NULL,
  `Phan4` text CHARACTER SET utf8 DEFAULT NULL,
  `MaLevel` varchar(30) CHARACTER SET utf8 NOT NULL,
  `LinkAnh` varchar(1000) COLLATE utf8_unicode_ci NOT NULL,
  `LinkREF` varchar(1000) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`MaMH`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Đang đổ dữ liệu cho bảng `document`
--

INSERT INTO `document` (`MaMH`, `TenMH`, `Phan1`, `Phan2`, `Phan3`, `Phan4`, `MaLevel`, `LinkAnh`, `LinkREF`) VALUES
('JS1', 'JAVASCRIPT', 'JavaScript (viết tắt là \'js\') là một ngôn ngữ lập trình mang đầy đủ tính năng của một ngôn ngữ lập trình động mà khi nó được áp dụng vào một tài liệu HTML, nó có thể đem lại khả năng tương tác động trên các trang web. Cha đẻ của ngôn ngữ này là Brendan Eich, đồng sáng lập dự án Mozilla, quỹ Mozilla, và tập đoàn Mozilla.', 'JavaScript thật sự rất linh hoạt. Bạn có thể bắt đầu với các bước nhỏ, với thư viện ảnh, bố cục có tính thay đổi và phản hồi đến các nút nhấn. Khi có nhiều kinh nghiệm hơn, bạn có thể tạo ra các trò chơi, hoạt họa 2D hoặc 3D, ứng dụng cơ sở dữ liệu toàn diện và nhiều thứ khác!\r\n\r\nBản thân Javascript là một ngôn ngữ linh động. Các nhà phát triển đã viết ra một số lượng lớn các công cụ thuộc top của core Javascript, mở ra một lượng lớn tính năng bổ sung với ít nỗ lực nhất. Nó bao gồm:\r\n\r\nGiao diện lập trình ứng dụng trên trình duyệt (API) — Các API được xây dựng bên trong các trình duyệt web, cung cấp tính năng như tạo HTML động, cài đặt CSS, thu tập và điều khiển video trực tiếp từ webcam của người dùng hoặc sinh ra đồ dọa 3D và các mẫu audio.\r\nCác API bên thứ ba cho phép nhà phát triển kết hợp tính năng trong website của họ từ người cung cấp nội dung khác chẳng hạn như Twitter hay Facebook.\r\nTừ các framework và thư viện bên thứ ba bạn có thể áp dụng tới tài liệu HTML của bạn, cho phép bạn nhanh chóng xây dựng được các trang web và các ứng dụng.', ' Phần phía dưới có thể nghe thật thú vị. JavaScript là một trong những công nghệ web sống động nhất và nếu như bạn sử dụng thật tốt, các website của bạn sẽ mang tính sáng tạo và đầy sức mạnh.\r\n\r\nTuy nhiên, nắm bắt Javascript sẽ có một chút khó hơn so  với HTML và CSS. Bạn có thể phải bắt đầu từng bước nhỏ và giữ cho quá trình làm việc luôn nhất quán. Để bắt đầu, chúng tôi sẽ biểu diễn cách làm thế nào để thêm những đoạn JavaScript cơ bản tới trang web, tạo ví dụ \'Hello world\' ', ' Vì bài viết này chỉ giới thiệu về JavaScript, chúng tôi sẽ không làm bạn bối rối khi nói rõ hơn về sự khác nhau giữa mã nguồn JavaScript căn bản và những công cụ được liệt kê ở trên. Bạn có thể tìm hiểu chi tiết trong  Mục học JavaScript, và MDN.\r\n\r\nỞ phần dưới chúng tôi sẽ giới thiệu cho bạn một số khía cạnh cơ bản về JavaScript và bạn cũng sẽ được làm việc với một vài API. Chúc bạn học tốt!', 'cb', 'https://st.quantrimang.com/photos/image/2018/06/15/lap-trinh-blockchain-phan-2-ngon-ngu-lap-trinh-javascript-200.jpg', 'https://www.udemy.com/course/javascript-the-basics-for-beginners/'),
('JS2', 'JAVASCRIPT', '1, Hằng trong javascript.\r\n\r\n \r\n-Để khai báo hằng trong javascript chúng ta sử dụng cú pháp:\r\n\r\nconst tenHang = giatri;\r\nTrong đó:\r\n\r\ntenHang: Là tên của hằng các bạn muốn đặt.\r\ngiatri: Là giá trị của hằng, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Hằng phải được đặt theo quy tắc sau đây\r\n\r\nTên hằng bắt đầu phải là chữ cái hoặc ký tự \r\nTên hằng không được bắt đầu bằng số.\r\nTên hằng có độ dài không giới hạn.\r\nVD:\r\n\r\n    const MyConst = 4; // đúng\r\n	const _MyConst = 4; // đúng\r\n	const __MyConst = 4; // đúng\r\n	const MyConst1 = 4; // đúng\r\n	const _MyConst1 = 4; // đúng\r\n	const __MyConst1 = 4; // đúng\r\n	const 90MyConst1 = 4; // sai\r\n	const -MyConst1 = 4; // sai\r\n2, Biến trong javascript.\r\n\r\n \r\n-Trong javascript chúng ta có thể khai báo biến bằng các cách sau đây:\r\n\r\nCách 1: Sử dụng từ khóa var.\r\n\r\nvar tenBien = giaTri;\r\nCách 2: Không cần sử dụng từ khóa.\r\n\r\ntenBien = giaTri\r\nTrong đó:\r\n\r\ntenBien: Là tên của biến các bạn muốn đặt.\r\ngiaTri: Là giá trị của biến, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Biến phải được đặt theo quy tắc sau đây\r\n\r\nTên biến bắt đầu phải là chữ cái hoặc ký tự \r\nTên biến không được bắt đầu bằng số.\r\nTên biến có độ dài không giới hạn.\r\nVD:\r\n\r\n	var MyVariable = 4; // đúng\r\n	var _MyVariable = 4; // đúng\r\n	var __MyVariable = 4; // đúng\r\n	var MyVariable1 = 4; // đúng\r\n	var _MyVariable1 = 4; // đúng\r\n	var __MyVariable1 = 4; // đúng\r\n	var 90MyVariable1 = 4; // sai\r\n	var -MyVariable1 = 4; // sai\r\n3, Kiểu dữ liệu trong Javascript.\r\n -Cũng giống như trong PHP biến và hằng trong javascript cũng tự detect kiểu dữ liệu của biến và hằng.\r\n\r\nVD:\r\n\r\nvar a = 5; //dữ liệu kiểu int\r\nvar a = 5.65; //dữ liệu kiểu float\r\nvar a = Toidicode; //dữ liệu kiểu string\r\nvar a = [1, 2, 3, 5, 9]; //dữ liệu kiểu array\r\nvar a = new Array(1, 2, 3, 5, 9); //dữ liệu kiểu array\r\nvar a = {\'b\': 4, \'c\': 5}; //dữ liệu kiểu object\r\n4, Hiển thị nội dung ra trình duyệt.\r\n-Trong javascript bạn có thể hiển thị nội dung ra trình duyệt bằng rất nhiều cách, nhưng trong phần này mình sẽ chỉ hướng dẫn mọi người 2 cách thông dụng nhất để các bạn có thể kiểm tra được dữ liệu.\r\n\r\nCách 1: dùng document.write() hoặc document.writeln().\r\n\r\nvar a = \'toidicode.com\';\r\ndocument.write(a);\r\nXem Kết Quả\r\n\r\nChú ý: Cách này không thể in ra được thông tin của object.\r\n\r\nCách 2: dùng console.log().\r\n\r\n    var a = \'toidicode.com\';\r\n	console.log(a);\r\nXem Kết Quả\r\n\r\n-Cách này có thể xuất được nội dung của tất cả các dạng dữ liệu và để xem được hiển thị của nó thì các bạn cần phải bật cửa sổ console của trình duyệt (thường ấn f12).\r\n\r\n5, Lời kết.\r\n-Qua phần này mình đã giới thiệu với mọi người về hằng và biến trong javascript, tuy nó rất là basic nhưng mọi người cũng nên chú ý vì sau này phải sử dụng nó rất là nhiều đấy.', '1, Toán tử.\r\n\r\n \r\nToán tử gán.\r\n-Toán tử gán thực ra là các bạn đã dùng qua ở bài trước rồi nhưng các bạn chưa biết tên gọi của nó thôi. Trong Javascript để gán giá trị cho biến hoặc hằng,.. chúng ta sử dụng dấu =\r\n\r\nCú pháp:\r\n\r\nvar bien = giatri;\r\nVD:\r\n\r\nvar a = 1996\r\nChạy Code\r\nToán tử số học\r\n-Toán tử số học thực ra là các dạng tính toán như cộng, trừ, nhân, chia ,... mà các bạn đã được học từ bé và đây là danh sách các toán tử số học trong javascript hỗ trợ.\r\n\r\nCộng\r\n-Phép cộng sẽ cộng 2 con số lại nếu nó là số, và sẽ nối chuỗi lại nếu là chuỗi.\r\n\r\nVD:\r\n\r\nvar a = 6;\r\nvar b = 5;\r\nvar c = \'vu thanh \';\r\nvar d =\'tai\';\r\ndocument.write(a + b); // 11\r\ndocument.write(\'<br/>\'); // xuống dòng cho dễ đọc\r\ndocument.write(c + d); // vu thanh tai\r\nChạy Code\r\nTrừ\r\n-Phép trừ chỉ dùng được với số\r\n\r\nVD:\r\n\r\nvar a = 6;\r\nvar b = 5;\r\ndocument.write(a - b); // 1\r\nChạy Code\r\nNhân\r\n-Phép nhân cũng chỉ dùng được với số.\r\n\r\nVD:\r\n\r\nvar a = 6;\r\nvar b = 5;\r\ndocument.write(a * b); // 30\r\nChạy Code\r\nChia\r\n-Phép chia dùng được với số.\r\n\r\nVD:\r\n\r\nvar a = 10;\r\nvar b = 5;\r\ndocument.write(a / b); // 2\r\nChạy Code\r\nChia lấy dư\r\n-Phép chia này sẽ lấy phần dư của phép chia\r\n\r\nVD:\r\n\r\nvar a = 6;\r\nvar b = 5;\r\ndocument.write(a % b); // 1\r\nXem Kết Quả\r\n\r\n2, Toán Tử Kết Hợp\r\n\r\n \r\n-Toán tử kết hợp  thực ra là một cách rút gọn của các toán tử số học.\r\n\r\n#	Ví dụ	Chú thích\r\n++	a++	Bằng a = a+1;\r\n--	a--	Bằng a = a-1;\r\n*=	a*=b	Bằng a = a*b;\r\n/=	a/=b	Bằng a = a/b;\r\n+=	a+=b	Bằng a = a+b;\r\n-=	a-=b	Bằng a = a-b;\r\n%=	a%=b	Bằng a = a%/b;\r\n3,Toán Tử Quan Hệ\r\n-Đây là một dạng toán tử sẽ phải sử dụng rất nhiều trong khi lập trình, mà theo như bên toán học thì đây là toán so sánh. Kết quả trả về của toán tử này sẽ là kiểu boolean (TRUE FALSE).\r\n\r\nToán tử	Chú Thích\r\n>	Lớn hơn\r\n>=	Lớn hơn hoặc bằng\r\n<	Nhỏ hơn\r\n<=	Nhở hơn hoặc bằng\r\n==	Bằng \r\n!=	Khác (Không bằng)\r\n-Chú ý: Các toán tử có từ 2 ký tự trở lên như <=,>= phải viết liền không được chứa khoảng trắng ở giữa.\r\n\r\n4, Toán tử logic.\r\n-Đây là một dạng toán tử kết hợp giữa hai hoặc nhiều giá trị boolean hay nói cách khác là kết hợp của hai hay nhiều toán tử quan hệ lại và nó cũng trả về dữ liệu dạng True False.\r\n\r\nBảng Logic\r\n\r\n#	Chú Thích	Ví Dụ	Kết Qủa\r\n &&	 Trả về true nếu cả hai vế là true	True&&True	True\r\n ||	Trả về true nếu một trong hai vế là true	True||False	True\r\n!	Trả về true nếu phủ định của nó là true	!False	True\r\n 5, Lời kết.\r\n-Phần hôm nay chúng ta dùng ở đây thôi, các bạn cố gắng ôn tập nhiều về phần này nhé, Bài tiếp theo chúng ta sẽ tìm hiểu về câu lệnh rẽ nhánh trong javascript.', '1, Câu lệnh if.\r\n\r\n \r\nIf\r\nCú Pháp:\r\n\r\nif (condition) {\r\n	//nếu điều kiện đúng thì thực hiện\r\n}\r\nTrong đó: condition là một hoặc nhiều mệnh đề điều kiện có giá trị trả về TRUE/FALSE.\r\n\r\nVD:\r\n\r\nvar a = 5;\r\nvar b = 6;\r\nif (a != b) {\r\n	//Vì a khác b nên code phía trong if sẽ được chạy\r\n	document.write(\'a khác b\');\r\n}\r\nXem Kết Quả\r\n\r\nCâu lệnh else.\r\n-Như ở phía trên mình có nói câu lệnh if thực hiện khi mệnh đề đi kèm nó đúng, và mệnh đề else sẽ thực hiện khi điều kiện của mệnh đề if không thỏa mãn.\r\n\r\nCú Pháp:\r\n\r\nif (true) {\r\n	// nếu đúng thì chạy code trong này\r\n} else {\r\n	//nếu sai thì chạy code trong này\r\n}\r\nVD:\r\n\r\nvar a = 5;\r\nvar b = 5;\r\nif (a != b) {\r\n	document.write(\'a khác b\');\r\n}\r\nelse{\r\n	//Vì a bằng b nên code phía trong else sẽ được chạy\r\n	document.write(\'a bằng b\');\r\n}\r\nXem Kết Quả\r\n\r\nKết hợp else if.\r\n-Có đôi khi bạn muốn xử lý đa nhánh như làm bài toán phân loại học lực thì lúc này bạn lên dùng else if để xử lý các điều kiện khác với if.\r\n\r\nVD:\r\n\r\nvar diem = 5;\r\n\r\nif (diem < 4) {\r\n    document.write(\'Học Lại\');\r\n} else if (diem >= 4 && diem < 5.5) {\r\n    document.write(\' Loại D\');\r\n} else if (diem >= 5.5 && diem < 7) {\r\n    document.write(\'Loai C\');\r\n} else if (diem >= 7 && diem < 8.5) {\r\n    document.write(\'Loại B\');\r\n} else if (diem >= 8.5 && diem <= 10) {\r\n    document.write(\'Loai A\');\r\n} else {\r\n    document.write(\'Điểm không hợp lệ\');\r\n}\r\nXem Kết Quả\r\n\r\nif-else lồng nhau.\r\n-Cũng giống như bài toán ở phần 3 thì chúng ta có thể sử dụng if-else lồng nhau được.\r\n\r\nVD:\r\n\r\nvar diem = 5;\r\n\r\nif (diem < 4) {\r\n    document.write(\'Học Lại\');\r\n} else {\r\n    if (diem >= 4 && diem < 5.5) {\r\n        document.write(\' Loại D\');\r\n    } else {\r\n        if (diem >= 5.5 && diem < 7) {\r\n            document.write(\'Loai C\');\r\n        } else {\r\n            if (diem >= 7 && diem < 8.5) {\r\n                document.write(\'Loại B\');\r\n            } else {\r\n                if (diem >= 8.5 && diem <= 10) {\r\n                    document.write(\'Loai A\');\r\n                } else {\r\n                    document.write(\'Điểm không hợp lệ\');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nXem Kết Quả\r\n\r\nif-else rút gọn.\r\n-Chúng ta cũng có thể rút gọn câu lệnh if-else với cú pháp như sau:\r\n\r\n(dieukien) ? (đúng) : (sai)\r\nTrong đó: Điều kiện là các biểu thức, mệnh đề trả về giá trị true false.\r\n\r\nVD:\r\n\r\nvar diem = 5;\r\ndiem == 5 ? document.write(\'Điểm Bằng 5\') : document.write(\'Diểm khác 5\');\r\nXem Kết Quả\r\n\r\n2, Switch case.\r\n\r\n \r\n-Đây là một loại câu lệnh rẽ nhánh( hay còn gọi là câu lệnh điều kiện) có đặc điểm là để giải quyết các bài toán mà có các nhánh là các điều kiện cố định.\r\n\r\nCú Pháp:\r\n\r\nswitch (condition) {\r\n    case value1:\r\n        //code\r\n        break;\r\n    case value2:\r\n        //code\r\n        break;\r\n    default:\r\n        //code\r\n        break;\r\n}\r\nTrong đó:\r\n\r\ncondition là biến muốn kiểm tra để dẽ nhánh.\r\nvalue1,value2,.. là các giá trị tương ứng của condition mà các bạn muốn rẽ nhánh.\r\ndefault là giá trị khác đối với tất cả các value trên(giống với else).\r\nbreak (xem chi tiết)\r\nVD: Đọc số trong phạm vi từ 0 đến 5.\r\n\r\nvar so = 5;\r\n\r\nswitch (so) {\r\n    case 0:\r\n        document.write(\'không\');\r\n        break;\r\n    case 1:\r\n        document.write(\'Một\');\r\n        break;\r\n    case 2:\r\n        document.write(\'Hai\');\r\n        break;\r\n    case 3:\r\n        document.write(\'Ba\');\r\n        break;\r\n    case 4:\r\n        document.write(\'Bốn\');\r\n        break;\r\n    case 5:\r\n        document.write(\'Năm\');\r\n        break;\r\n    default:\r\n        document.write(\'Không thỏa mãn\');\r\n        break;\r\n}\r\n Xem Kết Quả\r\n\r\n3, Lời kết.\r\n-Như vậy qua phần này mình đã giới thiệu với mọi người về if-else, các dạng và cách sử dụng của nó rồi, bài tiếp theo chúng ta sẽ tìm hiểu về vòng lặp trong Javascript xem có gì không nhé.', '1, Vòng lặp là gì.\r\n\r\n \r\n-Vòng lặp là một chuỗi sự kiện, hành động được lặp đi lặp lại theo một nguyên tắc nhất định. Ví dụ như vong lặp của con người: sinh-lão-bệnh-tử.\r\n\r\n-Và đối với Javascript nó hỗ trợ chúng ta 3 kiểu vòng lặp(loop) là for, forEach(cái này mình sẽ nói sau) while và do-while.\r\n\r\n2, Vòng lặp for.\r\n\r\n \r\n-Vòng lặp for trong javascript hoạt động cũng giống như các ngôn ngữ khác.\r\n\r\nCú Pháp:\r\n\r\nfor (bienkhoitao; dieukienthucthi ; buocnhay) { \r\n	# code...\r\n}\r\nTrong đó:\r\n\r\nbienkhoitao: là giá trị khởi tạo ban đầu của vòng lặp.\r\ndieukienthucthi: là điều kiện mà vòng lặp được phép chạy(chú ý: Nếu bạn muốn lặp vô tận thì có thể bỏ trống).\r\nbuocnhay: là khoảng đệm nhảy của mỗi vòng lặp.\r\nVD:\r\n\r\nfor (var i = 1; i <= 10; i++) {\r\n    document.write(\'Dòng số: \' + i + \'<br/>\');\r\n}\r\n Xem Kết Quả\r\n\r\nVòng lặp for vô tận\r\n-Để có thể làm vòng lặp for trở thành vòng lặp vô tận thì bạn chỉ cần để trống biểu thức điều kiện thứ 2 trong vòng lặp for.\r\n\r\nVD:\r\n\r\nfor (var i = 0; ; i++) {\r\n    //code\r\n}\r\n3, Vòng lặp do-while.\r\n-Đây là một dạng vòng lặp cũng khá phổ biến trong javascript, đặc trưng của vòng lặp này là để lặp các dữ liệu mà không xác đinh được điều kiện dừng chính xác hoặc điều kiện dừng phức tạp và nó thực thi câu lệnh trước rồi mới kiểm tra điều kiện.\r\n\r\nCú Pháp:\r\n\r\ndo {\r\n    // code\r\n} while (condition);\r\n Trong đó: condition là điều kiện để dừng vòng lặp, nếu bằng false thì vòng lặp sẽ dừng và ngược lại true vòng lặp sẽ chạy tiếp.\r\n\r\nVD: Phía trên mình có nói là vòng lặp do-while thực thi câu lệnh trước rồi mới kiểm tra. và đây là ví dụ chứng minh cho câu nói đó.\r\n\r\ndo {\r\n	document.write(1);\r\n} while(false);\r\n Xem Kết Quả\r\n\r\nVD: Thực hiện in ra các số từ 1 đến 10 bằng vòng lặp do-while.\r\n\r\n//khởi tạo biến i bằng 1\r\nvar i = 1;\r\ndo {\r\n    //in ra i hiện tại\r\n	document.write(i+ \'<br>\');\r\n    //tiến hành cộng i thêm 1 đơn vị\r\n	i++;\r\n//xét điều kiện i>10 thì sẽ dừng \r\n} while(i <= 10);\r\nXem Kết Quả\r\n\r\n4, Vòng lặp while.\r\n-Vòng lặp while cũng giống như vòng lặp do-while là dùng để lặp các dữ liệu không biết chính xác điều kiện dừng hoặc điều kiện dừng phức tạp. Và vòng lặp while khác với vòng lặp do-while là nó sẽ tiến hành kiểm tra điều kiện xong rồi mới tiến hành lặp.\r\n\r\nCú Pháp:\r\n\r\nwhile (condition) {\r\n		//code\r\n	}\r\nTrong đó: condition là điều kiện để dừng vòng lặp, nếu bằng false thì vòng lặp sẽ dừng và ngược lại true vòng lặp sẽ chạy tiếp.\r\n\r\nVD: Thực hiện in ra các số từ 1 đến 10 bằng vòng lặp while.\r\n\r\n//khởi tạo biến i=1\r\nvar i = 1;\r\n//xác định điều kiện i>10 thì sẽ dừng vòng lặp\r\nwhile(i <= 10){\r\n	document.write(i);\r\n	//tiến hành tăng i thêm 1 đơn vị\r\n	i++;\r\n}\r\nXem Kết Quả\r\n\r\n5, Vòng lặp lồng nhau.\r\n-Cũng giống như câu lệnh điều kiện thì voàng lặp cũng hoàn toàn có thể lồng nhau.\r\n\r\nVD: Vòng lặp for lồng nhau.\r\n\r\nfor(i = 0; i <= 10; i++) {\r\n	for(j = i ; j <= 10; j++) {\r\n		document.write(\'*\');\r\n	}\r\n	document.write(\'<br>\');\r\n}\r\nXem Kết Quả\r\n\r\nVD: Vòng lặp do-while lồng nhau.\r\n\r\nvar i = 0;\r\ndo {\r\n    var j = i;\r\n    do {\r\n        document.write(\'*\');\r\n        j++;\r\n    } while (j <= 10);\r\n    document.write(\'<br>\');\r\n    i++;\r\n} while (i <= 10);\r\nXem Kết Quả\r\n\r\nVD: Vòng lặp while lồng nhau.\r\n\r\nvar i = 0;\r\nwhile (i <= 10) {\r\n    var j = i;\r\n    while (j <= 10) {\r\n        document.write(\'*\');\r\n        j++;\r\n    }\r\n    document.write(\'<br>\');\r\n    i++;\r\n}\r\nXem Kết Quả\r\n\r\n6, Lời kết.\r\n-Như vậy phần trên mình đã giới thiệu với mọi người về vòng lặp trong javascript rồi, bài tiếp theo chúng ta sẽ đi tìm hiểu về hàm trong javascript.', 'tb1', 'https://blog.vandersonguidi.com.br/wp-content/uploads/2016/11/js3.png', 'https://www.udemy.com/course/es6-bootcamp-next-generation-javascript/'),
('JS3', 'JAVASCRIPT', '1, Break.\r\n\r\n \r\n-Lệnh break trong javascript sẽ có tác dụng dừng vòng lặp trong chương trình.\r\n\r\nVD: Dùng break để dừng vòng lặp.\r\n\r\n//khởi tạo vòng lặp chạy từ 0 đến 10\r\nfor (var i = 0; i <= 10; i++) {\r\n    //in ra i hiện tại\r\n    document.write(i);\r\n    //nếu i = 5 thì dừng vòng lặp\r\n    if (i == 5) {\r\n        break;\r\n    }\r\n}\r\nXem Kết Quả\r\n\r\n2, Continue.\r\n\r\n \r\n-Continue trong javascript có tác dụng bỏ qua các dòng lệnh phía sau nó và nhảy qua tiến trình lặp tiếp theo.\r\n\r\n//khởi tạo vòng lặp chạy từ 0 đến 10\r\nfor (var i = 0; i <= 10; i++) {\r\n    //nếu i = 5 thì bỏ qua vòng lặp\r\n    if (i == 5) {\r\n        continue;\r\n    }\r\n    //in ra i hiện tại\r\n    document.write(i + \'<br>\');\r\n}\r\nXem Kết Quả\r\n\r\n-Các bạn xem kết quả và cảm nhận nhé!\r\n\r\n3, Lời Kết.\r\n-Sau phần này mình hi vọng các bạn sẽ hiểu thêm về lệnh break,continue trong javascript. Bài tiếp theo chúng ta sẽ tìm hiểu về hàm trong javascript.', '1, Hàm là gì?\r\n\r\n \r\n-Hàm là một hoặc nhiều đoạn mã được viết ra để thực thi một hoặc nhiều hành động khi gọi nó, hàm có khả năng gọi đi gọi lại được. VD như thay vì tính tích của 2 số nhất định chúng ta có thể sử dụng hàm để tính tích của 2 số bất kỳ mà chúng ta muốn.\r\n\r\n2, Cấu trúc của hàm.\r\n\r\n \r\n-Hàm trong javascript khai báo cũng giống như trong javascript, là bắt đầu phải có từ khóa function với các dạng như sau:\r\n\r\nHàm cơ bản\r\n-Đây là dạng cơ bản nhất của hàm trong javascript, có cú pháp như sau:\r\n\r\nfunction funName() {\r\n	//code\r\n}\r\nTrong đó: funName là tên của hàm mà các bạn muốn đặt còn function là từ khóa bắt buộc.\r\n\r\nVD: Tạo hàm lấy tên website.\r\n\r\nfunction getWebsite() {\r\n    document.write(\'http://toidicode.com\');\r\n}\r\nHàm có tham số truyền vào\r\n-Đây là một dạng hàm rất hay được sử dụng trong dự án.\r\n\r\nCú pháp:\r\n\r\nfunction funName(param_1, ..., pram_n) {\r\n	//code\r\n}\r\nTrong đó:\r\n\r\nfunName là tên của hàm các bạn muốn đặt.\r\nparam_1,...,pram_n là các tham số mà các bạn muốn truyền vào hàm(không giới hạn số lượng).\r\nVD: Tạo hàm tính tổng của 2 số bất kì.\r\n\r\nfunction getSum(a, b) {\r\n	document.write(\'Tổng: \' + (a + b));\r\n}\r\nHàm có tham số mặc định\r\n-Đây thực ra là dạng hàm có truyền tham số và đồng thời xét luôn giá trị mặc định cho các tham số đó.\r\n\r\nCú pháp:\r\n\r\nfunction funName(param_1 = value_1, ..., pram_n = value_2) {\r\n	//code\r\n}\r\nTrong đó:\r\n\r\nfunName là tên của hàm các bạn muốn đặt.\r\nparam_1,...,pram_n là các tham số mà các bạn muốn truyền vào hàm(không giới hạn số lượng).\r\nvalue_1,...,value_n là các giá trị tương ứng với các pram.\r\nVD: với hàm getSum ở trên mình sẽ xét tham số mặc định cho nó.\r\n\r\nfunction getSum(a = 1, b = 2) {\r\n	document.write(\'Tổng: \' + (a + b));\r\n}\r\nHàm có giá trị trả về và không\r\n-Trong javascript có hai loại hàm,đó là hàm có giá trị trả về và hàm không có giá trị trả về.\r\n\r\nĐối với hàm có giá trị trả về thì phải sử dụng từ khóa return\r\nVà ngược lại đối với hàm không có giá trị trả về thì không có từ khóa return.\r\nVD: khai báo hàm getSum ở trên là hàm có giá trị trả về.\r\n\r\nfunction getSum(a = 1, b = 2) {\r\n	return a + b;\r\n}\r\n3, Gọi hàm.\r\n-Sau khi đã tạo được hàm thì giờ các bạn chỉ cần gọi hàm thôi.\r\n\r\nHàm cơ bản\r\n-Để gọi hàm này các bạn sử dụng cú pháp:\r\n\r\nfunName();\r\nTrong đó: funName là tên của hàm các bạn muốn gọi.\r\n\r\nVD: Gọi hàm getWebsite ở trên.\r\n\r\ngetWebsite();\r\nXem Kết Quả\r\n\r\nHàm có tham số truyền vào\r\n-Để gọi dạng hàm này thì các bạn cũng dùng cú pháp như hàm cơ bản, nhưng đồng thời các bạn truyền thêm các param vào theo cú pháp:\r\n\r\nfunName(param_1, ..., param_n);\r\nVD: Ta sẽ gọi hàm getSum ở trên.\r\n\r\ngetSum(5, 6);\r\nXem Kết Quả\r\n\r\nHàm có tham số mặc định\r\n-Để gọi dạng hàm này chúng ta có thể sử dụng cách gọi hàm cơ bản nếu không muốn truyền tham số, và cách gọi hàm có tham số truyền vào nếu muốn truyền tham số cho hàm.\r\n\r\nVD: Mình sẽ gọi hàm getSum theo 2 cách.\r\n\r\ngetSum();\r\n//tạo khoảng ngăn cách cho các bạn dễ nhìn\r\ndocument.write(\'<br>__________________________________<br>\');\r\ngetSum(4, 5);\r\nXem Kết Quả\r\n\r\nHàm có giá trị trả về và không\r\n-Hàm này thì các bạn gọi như các ví dụ trên nhé.\r\n\r\nVD: Mình sẽ gọi hàm getSum ở trên.\r\n\r\nvar kq1 = getSum();\r\n//in kết quả hàm trả về\r\ndocument.write(kq1);\r\n//tạo khoảng ngăn cách cho các bạn dễ nhìn\r\ndocument.write(\'<br>__________________________________<br>\');\r\nvar kq2 = getSum(4, 5);\r\n//in kết quả hàm trả về\r\ndocument.write(kq2);\r\nXem Kết Quả\r\n\r\n4, Các ràng buộc của tên hàm.\r\n-Javascript cũng giống như các ngôn ngữ khác nó cũng có các ràng buộc về tên hàm sau đây:\r\n\r\nTên hàm phải được bắt đầu bằng chữ cái (a-z,A-Z) hoặc ký tự _.\r\nTên hàm không được bắt đầu bằng số, các ký tự khác ký tự _.\r\n5, Lời kết.\r\n-Như vậy phần này mình đã giới thiệu với các bạn về hàm trong javascript rồi, phần tiếp theo mình sẽ giới thiệu với bạn các hàm xuất ra notification(thông báo) trên trình duyệt trong javascript.\r\n\r\nNguồn: Toidicode.com\r\n\r\nNếu bạn là người có văn hóa, hãy để lại link bài viết gốc khi chia ', '1, Hàm alert().\r\n\r\n \r\n-Hàm alert() trong javascript có nhiệm vụ hiển thị ra màn hình một hộp thoại kèm theo nội dung do chúng ta setup.\r\n\r\nhàm alert trong javascript\r\n\r\nCú pháp:\r\n\r\nalert(content);\r\nTrong đó: content là nội dung mà các bạn muốn hiển thị ra ngoài màn hình, có thể là biến, hằng,...\r\n\r\nVD: Thông báo ra màn hình chữ: \'học lập trình online toidicode.com\'.\r\n\r\nalert(\'học lập trình online toidicode.com\');\r\nXem Kết Quả\r\n\r\n2, Hàm Confirm().\r\n\r\n \r\n-Hàm này cũng có tác dụng tạo ta các thông báo trên màn hình như hàm alert() và đồng thời kèm theo 2 button OK, hủy(tùy theo ngôn ngữ của trình duyệt có thể sẽ khác). Khi của sổ hiện nên nếu như người dùng chọn OK thì nó sẽ trả về TRUE và ngược lại thì nó sẽ trả về FALSE.\r\n\r\nconfirm trong javascript\r\n\r\nCú pháp:\r\n\r\nconfirm(content);\r\nTrong đó: content là nội dung mà các bạn muốn hiển thị ra ngoài màn hình, có thể là biến, hằng,...\r\n\r\nVD: Hiển thị ra màn hình đoạn text \'Bạn có phải là fan của toidicode.com không?\' và kiểm tra nếu như người dùng chọn Ok thì in ra chữ\'Cảm ơn bạn rất nhiều!\' còn chọn hủy thì in ra chữ \'Sao thế bạn?\'\r\n\r\nif (confirm(\'Bạn có phải là fan của toidicode.com không?\')) {\r\n    document.write(\'Cảm ơn bạn rất nhiều!\');\r\n} else {\r\n    document.write(\'Sao thế bạn?\');\r\n}\r\nXem Kết Quả\r\n\r\n3, Hàm Prompt().\r\n-Hàm này sẽ hiển thị ra màn hình một thông báo kèm theo một ô input cho chúng ta nhập vào nội dung. Nếu người dùng chọn hủy thì nó sẽ trả về FALSE, nếu người dùng nhập nội dung và ấn ok thì nó sẽ trả về nội dung đó.\r\n\r\nprompt trong javascript\r\n\r\nCú pháp:\r\n\r\nprompt(content);\r\nTrong đó: content là nội dung mà các bạn muốn hiển thị ra ngoài màn hình, có thể là biến, hằng,...\r\n\r\nVD: Hiển thị ra màn hình một prompt kèm thông báo \'Chào bạn, năm nay bạn bao nhiêu tuổi?\' nếu người dùng ấn hủy thì sẽ in ra dòng chữ \'Sao không trả lời à bạn?\' còn nếu người dùng nhập nội dung và ấn ok thì sẽ in ra nội dung mà người dùng vừa nhập.\r\n\r\nif (result = prompt(\'Chào bạn, năm nay bạn bao nhiêu tuổi?\')) {\r\n    document.write(result);\r\n} else {\r\n    document.write(\'Sao không trả lời à bạn?\');\r\n}\r\nXem Kết Quả\r\n\r\n4, Lời kết.\r\n-Như vậy qua phần này mình đã giới thiệu với các bạn ba hàm hiển thị thông báo ra trình duyệt trong javascript rồi. Phần tiếp theo chúng ta sẽ tìm hiểu về mảng trong javascript.', '1, Khai báo mảng.\r\n\r\n \r\n-Ở trong javascript chúng ta có thể khai báo mảng bằng 2 cách sau đây:\r\n\r\nKhai báo bằng dấu []\r\n-Đối với cách này các bạn khai báo theo cú pháp sau:\r\n\r\nvar arr = [value1, value2, ..., valuen];\r\nTrong đó:\r\n\r\narr là tên biến mảng.\r\nvalue1,...valuen là các giá trị của mảng mà các bạn muốn tạo.\r\nVD: Khai báo mảng arr gồm các số: 1,2,4,5,9,6 bằng dấu [].\r\n\r\nvar arr = [1, 2, 4, 5, 9, 6];\r\nKhai báo bằng new Array()\r\n-Đối với cách này các bạn khai báo với cú pháp như sau:\r\n\r\nvar arr = new Array(value1, value2, ..., valuen);\r\nTrong đó:\r\n\r\narr là tên biến mảng.\r\nvalue1,...valuen là các giá trị của mảng mà các bạn muốn tạo.\r\nVD: Khai báo mảng arr gồm các số: 1,2,4,5,9,6 bằng từ khóa new Arrray().\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\n2, Truy xuất mảng.\r\n\r\n \r\n-Sau khi đã tạo được mảng rồi thì chúng ta cần phải truy xuất thông tin của mảng. Để có thể lấy ra giá trị của một thành phần trong mảng thì chúng ta sử dụng cú pháp sau:\r\n\r\narr[index];\r\nTrong đó: arr là tên biến mảng, index là vị trí của mảng(bắt đầu từ 0).\r\n\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\nalert(arr[1]);\r\n//result: 2\r\nXem Kết Quả\r\n\r\n3, Các hàm xử lý mảng.\r\n-Sau đây mình xin tổng hợp lại các hàm xử lý mảng mà javascript đã tích hợp sẵn cho chúng ta.\r\n\r\nLength\r\n-Đây là một thuộc tính trong mảng, trả về số lượng phần tử đang có trong mảng.\r\n\r\nCú pháp:\r\n\r\narr.length;\r\nTrong đó: arr là tên của biến mảng.\r\n\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\nalert(arr.length);\r\nXem Kết Quả\r\n\r\nHàm join()\r\n-Hàm này có tác dụng gộp tất cả các phần tử có trong mảng thành một chuỗi.\r\n\r\nCú Pháp:\r\n\r\narr.join(string);\r\nTrong đó:\r\n\r\narr là tên biến mảng mà chúng ta cần gộp.\r\nstring là chuỗi phân cách giữa các phần tử sau khi gộp (để trống là ngăn cách bằng dấu ,).\r\nVD:\r\n\r\n//gộp mảng mặc định\r\ndocument.write(arr.join() + \'<br>\');\r\n//result: 1,2,4,5,9,6\r\n//gộp mảng ngăn cách nhau bằng -\r\ndocument.write(arr.join(\'-\') + \'<br>\');\r\n//result: 1-2-4-5-9-6\r\nXem Kết Quả\r\n\r\nHàm valueOf()\r\n-Hàm này tương tự như hàm join(), nhưng chỉ có thể nối các phần tử trong mảng bằng dấy , thôi.\r\n\r\nHàm push()\r\n-Hàm này có tác dụng thêm một hoặc nhiều phần tử vào cuối mảng.\r\n\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\ndocument.write(arr.join() + \'<br>\');\r\n//thêm 7 vào mảng\r\narr.push(7);\r\ndocument.write(arr.join() + \'<br>\');\r\n//thêm 3,8 vào mảng\r\narr.push(3,8);\r\ndocument.write(arr.join() + \'<br>\');\r\nXem Kết Quả\r\n\r\nHàm pop()\r\n-Hàm này có tác dụng xóa phần tử cuối cùng trong mảng.\r\n\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\ndocument.write(arr.join() + \'<br>\');\r\n//xóa phần tử cuối\r\narr.pop();\r\ndocument.write(arr.join() + \'<br>\');\r\nXem Kết Quả\r\n\r\nHàm unshift()\r\n-Hàm này có tác dụng thêm một hoặc nhiều phần tử vào đầu mảng.\r\n\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\ndocument.write(arr.join() + \'<br>\');\r\n//thêm 7 vào mảng\r\narr.unshift(7);\r\ndocument.write(arr.join() + \'<br>\');\r\n//thêm 3,8 vào mảng\r\narr.unshift(3, 8);\r\ndocument.write(arr.join() + \'<br>\');\r\nXem Kết Quả\r\n\r\nHàm shift()\r\n-Hàm này có tác dụng xóa phần tử đầu tiên của mảng.\r\n\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\ndocument.write(arr.join() + \'<br>\');\r\n//xóa phần tử đầu\r\narr.shift();\r\ndocument.write(arr.join() + \'<br>\');\r\nXem Kết Quả\r\n\r\nHàm splice()\r\n-Hàm này có tác dụng thêm phần tử vào mảng theo một vị trí xác định.\r\n\r\nCú pháp:\r\n\r\narr.splice(index, howmany, item1, ....., itemX)\r\nTrong đó:\r\n\r\narr là tên biến mảng các bạn muốn thêm vào.\r\nindex là vị trí mà các bạn muốn thêm phần tử vào (bắt đầu từ 0).\r\nhowmany là số phần tử sẽ xóa tính tự vị trí thêm mảng, để 0 nếu không muốn xóa phần tử nào.\r\nitem1,...itemX là giá trị của các phần tử muốn thêm vào.\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\ndocument.write(arr.join() + \'<br>\');\r\n//thêm 2 phần tử vào vị trí thứ 1 và 0 xóa phần tử nào\r\narr.splice(1, 0, 3, 8);\r\ndocument.write(arr.join() + \'<br>\');\r\nXem Kết Quả\r\n\r\nHàm concat()\r\n-Hàm này có tác dụng ghép 2 mảng lại với nhau.\r\n\r\nVD:\r\n\r\nvar arr1 = new Array(1, 2, 4, 5, 9, 6);\r\nvar arr2 = new Array(3, 8, 7);\r\ndocument.write(arr1.concat(arr2) + \'<br>\');\r\nXem Kết Quả\r\n\r\nHàm slice()\r\n-Hàm này có tác dụng lấy ra một hoặc một số phần tử trong mảng.\r\n\r\nCú pháp:\r\n\r\narr.slice(begin,end);\r\nTrong đó:\r\n\r\narr là tên biến mảng các bạn muốn thêm vào.\r\nbegin là vị trí bắt đầu.\r\nend là vị trí kết thúc, nếu muốn cắt từ vị trí đầu đến hết thì bỏ trống giá trị này.\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\ndocument.write(arr.join() + \'<br>\');\r\n//cắt mảng từ vị trí thứ 3 đến hết\r\ndocument.write(arr.slice(3) + \'<br>\');\r\nXem Kết Quả\r\n\r\nHàm sort()\r\n-Hàm này có tác dụng sắp xếp lại mảng theo chiều tăng dần, nếu là số thì từ bé đến lớn, chữ thì sắp xếp theo alpha(a-z).\r\n\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\ndocument.write(arr.join() + \'<br>\');\r\n//sắp xếp lại mảng\r\ndocument.write(arr.sort() + \'<br>\');\r\nXem Kết Quả\r\n\r\nHàm reverse()\r\n-Hàm này có tác dụng đảo ngược vị trí các phần tử của mảng.\r\n\r\nVD:\r\n\r\nvar arr = new Array(1, 2, 4, 5, 9, 6);\r\ndocument.write(arr.join() + \'<br>\');\r\n//cắt mảng từ vị trí thứ 3 đến hết\r\ndocument.write(arr.reverse() + \'<br>\');\r\nXem Kết Quả\r\n\r\n3, Lời kết.\r\n-Như vậy mình đã giới thiệu xong đến mọi người về mảng trong javascript rồi, phần sau chúng ta sẽ bắt đầu chuyển qua tìm hiểu về object trong javascript.', 'tb2', 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSLEvaRLgLBBHet9MVOEOXHyiE31UGc_DCgSg&usqp=CAU', 'https://www.udemy.com/course/javascript-intermediate-mastering-functions/'),
('JS4', 'JAVASCRIPT', '1, Hằng trong javascript.\r\n\r\n \r\n-Để khai báo hằng trong javascript chúng ta sử dụng cú pháp:\r\n\r\nconst tenHang = giatri;\r\nTrong đó:\r\n\r\ntenHang: Là tên của hằng các bạn muốn đặt.\r\ngiatri: Là giá trị của hằng, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Hằng phải được đặt theo quy tắc sau đây\r\n\r\nTên hằng bắt đầu phải là chữ cái hoặc ký tự \'_\'\r\nTên hằng không được bắt đầu bằng số.\r\nTên hằng có độ dài không giới hạn.\r\nVD:\r\n\r\n    const MyConst = 4; // đúng\r\n	const _MyConst = 4; // đúng\r\n	const __MyConst = 4; // đúng\r\n	const MyConst1 = 4; // đúng\r\n	const _MyConst1 = 4; // đúng\r\n	const __MyConst1 = 4; // đúng\r\n	const 90MyConst1 = 4; // sai\r\n	const -MyConst1 = 4; // sai\r\n2, Biến trong javascript.\r\n\r\n \r\n-Trong javascript chúng ta có thể khai báo biến bằng các cách sau đây:\r\n\r\nCách 1: Sử dụng từ khóa var.\r\n\r\nvar tenBien = giaTri;\r\nCách 2: Không cần sử dụng từ khóa.\r\n\r\ntenBien = giaTri\r\nTrong đó:\r\n\r\ntenBien: Là tên của biến các bạn muốn đặt.\r\ngiaTri: Là giá trị của biến, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Biến phải được đặt theo quy tắc sau đây\r\n\r\nTên biến bắt đầu phải là chữ cái hoặc ký tự \'_\'\r\nTên biến không được bắt đầu bằng số.\r\nTên biến có độ dài không giới hạn.\r\nVD:\r\n\r\n	var MyVariable = 4; // đúng\r\n	var _MyVariable = 4; // đúng\r\n	var __MyVariable = 4; // đúng\r\n	var MyVariable1 = 4; // đúng\r\n	var _MyVariable1 = 4; // đúng\r\n	var __MyVariable1 = 4; // đúng\r\n	var 90MyVariable1 = 4; // sai\r\n	var -MyVariable1 = 4; // sai\r\n3, Kiểu dữ liệu trong Javascript.\r\n -Cũng giống như trong PHP biến và hằng trong javascript cũng tự detect kiểu dữ liệu của biến và hằng.\r\n\r\nVD:\r\n\r\nvar a = 5; //dữ liệu kiểu int\r\nvar a = 5.65; //dữ liệu kiểu float\r\nvar a = \'Toidicode\'; //dữ liệu kiểu string\r\nvar a = [1, 2, 3, 5, 9]; //dữ liệu kiểu array\r\nvar a = new Array(1, 2, 3, 5, 9); //dữ liệu kiểu array\r\nvar a = {\'b\': 4, \'c\': 5}; //dữ liệu kiểu object\r\n4, Hiển thị nội dung ra trình duyệt.\r\n-Trong javascript bạn có thể hiển thị nội dung ra trình duyệt bằng rất nhiều cách, nhưng trong phần này mình sẽ chỉ hướng dẫn mọi người 2 cách thông dụng nhất để các bạn có thể kiểm tra được dữ liệu.\r\n\r\nCách 1: dùng document.write() hoặc document.writeln().\r\n\r\nvar a = \'toidicode.com\';\r\ndocument.write(a);\r\nXem Kết Quả\r\n\r\nChú ý: Cách này không thể in ra được thông tin của object.\r\n\r\nCách 2: dùng console.log().\r\n\r\n    var a = \'toidicode.com\';\r\n	console.log(a);\r\nXem Kết Quả\r\n\r\n-Cách này có thể xuất được nội dung của tất cả các dạng dữ liệu và để xem được hiển thị của nó thì các bạn cần phải bật cửa sổ console của trình duyệt (thường ấn f12).\r\n\r\n5, Lời kết.', '1, Hằng trong javascript.\r\n\r\n \r\n-Để khai báo hằng trong javascript chúng ta sử dụng cú pháp:\r\n\r\nconst tenHang = giatri;\r\nTrong đó:\r\n\r\ntenHang: Là tên của hằng các bạn muốn đặt.\r\ngiatri: Là giá trị của hằng, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Hằng phải được đặt theo quy tắc sau đây\r\n\r\nTên hằng bắt đầu phải là chữ cái hoặc ký tự \'_\'\r\nTên hằng không được bắt đầu bằng số.\r\nTên hằng có độ dài không giới hạn.\r\nVD:\r\n\r\n    const MyConst = 4; // đúng\r\n	const _MyConst = 4; // đúng\r\n	const __MyConst = 4; // đúng\r\n	const MyConst1 = 4; // đúng\r\n	const _MyConst1 = 4; // đúng\r\n	const __MyConst1 = 4; // đúng\r\n	const 90MyConst1 = 4; // sai\r\n	const -MyConst1 = 4; // sai\r\n2, Biến trong javascript.\r\n\r\n \r\n-Trong javascript chúng ta có thể khai báo biến bằng các cách sau đây:\r\n\r\nCách 1: Sử dụng từ khóa var.\r\n\r\nvar tenBien = giaTri;\r\nCách 2: Không cần sử dụng từ khóa.\r\n\r\ntenBien = giaTri\r\nTrong đó:\r\n\r\ntenBien: Là tên của biến các bạn muốn đặt.\r\ngiaTri: Là giá trị của biến, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Biến phải được đặt theo quy tắc sau đây\r\n\r\nTên biến bắt đầu phải là chữ cái hoặc ký tự \'_\'\r\nTên biến không được bắt đầu bằng số.\r\nTên biến có độ dài không giới hạn.\r\nVD:\r\n\r\n	var MyVariable = 4; // đúng\r\n	var _MyVariable = 4; // đúng\r\n	var __MyVariable = 4; // đúng\r\n	var MyVariable1 = 4; // đúng\r\n	var _MyVariable1 = 4; // đúng\r\n	var __MyVariable1 = 4; // đúng\r\n	var 90MyVariable1 = 4; // sai\r\n	var -MyVariable1 = 4; // sai\r\n3, Kiểu dữ liệu trong Javascript.\r\n -Cũng giống như trong PHP biến và hằng trong javascript cũng tự detect kiểu dữ liệu của biến và hằng.\r\n\r\nVD:\r\n\r\nvar a = 5; //dữ liệu kiểu int\r\nvar a = 5.65; //dữ liệu kiểu float\r\nvar a = \'Toidicode\'; //dữ liệu kiểu string\r\nvar a = [1, 2, 3, 5, 9]; //dữ liệu kiểu array\r\nvar a = new Array(1, 2, 3, 5, 9); //dữ liệu kiểu array\r\nvar a = {\'b\': 4, \'c\': 5}; //dữ liệu kiểu object\r\n4, Hiển thị nội dung ra trình duyệt.\r\n-Trong javascript bạn có thể hiển thị nội dung ra trình duyệt bằng rất nhiều cách, nhưng trong phần này mình sẽ chỉ hướng dẫn mọi người 2 cách thông dụng nhất để các bạn có thể kiểm tra được dữ liệu.\r\n\r\nCách 1: dùng document.write() hoặc document.writeln().\r\n\r\nvar a = \'toidicode.com\';\r\ndocument.write(a);\r\nXem Kết Quả\r\n\r\nChú ý: Cách này không thể in ra được thông tin của object.\r\n\r\nCách 2: dùng console.log().\r\n\r\n    var a = \'toidicode.com\';\r\n	console.log(a);\r\nXem Kết Quả\r\n\r\n-Cách này có thể xuất được nội dung của tất cả các dạng dữ liệu và để xem được hiển thị của nó thì các bạn cần phải bật cửa sổ console của trình duyệt (thường ấn f12).\r\n\r\n5, Lời kết.', '1, Hằng trong javascript.\r\n\r\n \r\n-Để khai báo hằng trong javascript chúng ta sử dụng cú pháp:\r\n\r\nconst tenHang = giatri;\r\nTrong đó:\r\n\r\ntenHang: Là tên của hằng các bạn muốn đặt.\r\ngiatri: Là giá trị của hằng, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Hằng phải được đặt theo quy tắc sau đây\r\n\r\nTên hằng bắt đầu phải là chữ cái hoặc ký tự \'_\'\r\nTên hằng không được bắt đầu bằng số.\r\nTên hằng có độ dài không giới hạn.\r\nVD:\r\n\r\n    const MyConst = 4; // đúng\r\n	const _MyConst = 4; // đúng\r\n	const __MyConst = 4; // đúng\r\n	const MyConst1 = 4; // đúng\r\n	const _MyConst1 = 4; // đúng\r\n	const __MyConst1 = 4; // đúng\r\n	const 90MyConst1 = 4; // sai\r\n	const -MyConst1 = 4; // sai\r\n2, Biến trong javascript.\r\n\r\n \r\n-Trong javascript chúng ta có thể khai báo biến bằng các cách sau đây:\r\n\r\nCách 1: Sử dụng từ khóa var.\r\n\r\nvar tenBien = giaTri;\r\nCách 2: Không cần sử dụng từ khóa.\r\n\r\ntenBien = giaTri\r\nTrong đó:\r\n\r\ntenBien: Là tên của biến các bạn muốn đặt.\r\ngiaTri: Là giá trị của biến, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Biến phải được đặt theo quy tắc sau đây\r\n\r\nTên biến bắt đầu phải là chữ cái hoặc ký tự \'_\'\r\nTên biến không được bắt đầu bằng số.\r\nTên biến có độ dài không giới hạn.\r\nVD:\r\n\r\n	var MyVariable = 4; // đúng\r\n	var _MyVariable = 4; // đúng\r\n	var __MyVariable = 4; // đúng\r\n	var MyVariable1 = 4; // đúng\r\n	var _MyVariable1 = 4; // đúng\r\n	var __MyVariable1 = 4; // đúng\r\n	var 90MyVariable1 = 4; // sai\r\n	var -MyVariable1 = 4; // sai\r\n3, Kiểu dữ liệu trong Javascript.\r\n -Cũng giống như trong PHP biến và hằng trong javascript cũng tự detect kiểu dữ liệu của biến và hằng.\r\n\r\nVD:\r\n\r\nvar a = 5; //dữ liệu kiểu int\r\nvar a = 5.65; //dữ liệu kiểu float\r\nvar a = \'Toidicode\'; //dữ liệu kiểu string\r\nvar a = [1, 2, 3, 5, 9]; //dữ liệu kiểu array\r\nvar a = new Array(1, 2, 3, 5, 9); //dữ liệu kiểu array\r\nvar a = {\'b\': 4, \'c\': 5}; //dữ liệu kiểu object\r\n4, Hiển thị nội dung ra trình duyệt.\r\n-Trong javascript bạn có thể hiển thị nội dung ra trình duyệt bằng rất nhiều cách, nhưng trong phần này mình sẽ chỉ hướng dẫn mọi người 2 cách thông dụng nhất để các bạn có thể kiểm tra được dữ liệu.\r\n\r\nCách 1: dùng document.write() hoặc document.writeln().\r\n\r\nvar a = \'toidicode.com\';\r\ndocument.write(a);\r\nXem Kết Quả\r\n\r\nChú ý: Cách này không thể in ra được thông tin của object.\r\n\r\nCách 2: dùng console.log().\r\n\r\n    var a = \'toidicode.com\';\r\n	console.log(a);\r\nXem Kết Quả\r\n\r\n-Cách này có thể xuất được nội dung của tất cả các dạng dữ liệu và để xem được hiển thị của nó thì các bạn cần phải bật cửa sổ console của trình duyệt (thường ấn f12).\r\n\r\n5, Lời kết.', '1, Hằng trong javascript.\r\n\r\n \r\n-Để khai báo hằng trong javascript chúng ta sử dụng cú pháp:\r\n\r\nconst tenHang = giatri;\r\nTrong đó:\r\n\r\ntenHang: Là tên của hằng các bạn muốn đặt.\r\ngiatri: Là giá trị của hằng, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Hằng phải được đặt theo quy tắc sau đây\r\n\r\nTên hằng bắt đầu phải là chữ cái hoặc ký tự \'_\'\r\nTên hằng không được bắt đầu bằng số.\r\nTên hằng có độ dài không giới hạn.\r\nVD:\r\n\r\n    const MyConst = 4; // đúng\r\n	const _MyConst = 4; // đúng\r\n	const __MyConst = 4; // đúng\r\n	const MyConst1 = 4; // đúng\r\n	const _MyConst1 = 4; // đúng\r\n	const __MyConst1 = 4; // đúng\r\n	const 90MyConst1 = 4; // sai\r\n	const -MyConst1 = 4; // sai\r\n2, Biến trong javascript.\r\n\r\n \r\n-Trong javascript chúng ta có thể khai báo biến bằng các cách sau đây:\r\n\r\nCách 1: Sử dụng từ khóa var.\r\n\r\nvar tenBien = giaTri;\r\nCách 2: Không cần sử dụng từ khóa.\r\n\r\ntenBien = giaTri\r\nTrong đó:\r\n\r\ntenBien: Là tên của biến các bạn muốn đặt.\r\ngiaTri: Là giá trị của biến, có thể là số,chuỗi,mảng,object.\r\nChú ý: Tên Biến phải được đặt theo quy tắc sau đây\r\n\r\nTên biến bắt đầu phải là chữ cái hoặc ký tự \'_\'\r\nTên biến không được bắt đầu bằng số.\r\nTên biến có độ dài không giới hạn.\r\nVD:\r\n\r\n	var MyVariable = 4; // đúng\r\n	var _MyVariable = 4; // đúng\r\n	var __MyVariable = 4; // đúng\r\n	var MyVariable1 = 4; // đúng\r\n	var _MyVariable1 = 4; // đúng\r\n	var __MyVariable1 = 4; // đúng\r\n	var 90MyVariable1 = 4; // sai\r\n	var -MyVariable1 = 4; // sai\r\n3, Kiểu dữ liệu trong Javascript.\r\n -Cũng giống như trong PHP biến và hằng trong javascript cũng tự detect kiểu dữ liệu của biến và hằng.\r\n\r\nVD:\r\n\r\nvar a = 5; //dữ liệu kiểu int\r\nvar a = 5.65; //dữ liệu kiểu float\r\nvar a = \'Toidicode\'; //dữ liệu kiểu string\r\nvar a = [1, 2, 3, 5, 9]; //dữ liệu kiểu array\r\nvar a = new Array(1, 2, 3, 5, 9); //dữ liệu kiểu array\r\nvar a = {\'b\': 4, \'c\': 5}; //dữ liệu kiểu object\r\n4, Hiển thị nội dung ra trình duyệt.\r\n-Trong javascript bạn có thể hiển thị nội dung ra trình duyệt bằng rất nhiều cách, nhưng trong phần này mình sẽ chỉ hướng dẫn mọi người 2 cách thông dụng nhất để các bạn có thể kiểm tra được dữ liệu.\r\n\r\nCách 1: dùng document.write() hoặc document.writeln().\r\n\r\nvar a = \'toidicode.com\';\r\ndocument.write(a);\r\nXem Kết Quả\r\n\r\nChú ý: Cách này không thể in ra được thông tin của object.\r\n\r\nCách 2: dùng console.log().\r\n\r\n    var a = \'toidicode.com\';\r\n	console.log(a);\r\nXem Kết Quả\r\n\r\n-Cách này có thể xuất được nội dung của tất cả các dạng dữ liệu và để xem được hiển thị của nó thì các bạn cần phải bật cửa sổ console của trình duyệt (thường ấn f12).\r\n\r\n5, Lời kết.', 'nc', 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSsiT6IVZqxwjYFgAdhl8PeiYtcAo7mTAOEqg&usqp=CAU', 'https://www.udemy.com/course/mastering-javascript/'),
('HTML1', 'HTML', 'phan1html-cb', 'phan2html-cb', 'phan3thml-cb', 'phan4html-cb', 'cb', 'https://laptrinhphp.info/uploads/images/Bai-Viet/PHP-can-ban/html5.png', 'https://www.udemy.com/course/learn-basic-html5/'),
('HTML2', 'HTML', 'phan1html-tb1', 'phan2html-tb1', 'phan3thml-tb1', 'phan4html-tb1', 'tb1', 'https://laptrinhphp.info/uploads/images/Bai-Viet/PHP-can-ban/html5.png', 'https://www.udemy.com/course/responsive-web-design-intermediate/'),
('HTML3', 'HTML', 'phan1html-tb2', 'phan2html-tb2', 'phan3thml-tb2', 'phan4html-tb2', 'tb2', 'https://laptrinhphp.info/uploads/images/Bai-Viet/PHP-can-ban/html5.png', 'https://www.udemy.com/course/complete-web-development-with-html-css-and-javascript/'),
('HTML4', 'HTML', 'phan1html-nc', 'phan2html-nc', 'phan3thml-nc', 'phan4html-nc', 'nc', 'https://laptrinhphp.info/uploads/images/Bai-Viet/PHP-can-ban/html5.png', 'https://www.udemy.com/course/advanced-html5-build-5-advanced-html5-web-apps/'),
('JS5', 'JAVASCRIPT', 'DEMO', 'DEMO', 'DEMO', 'DEMO', 'expert', 'https://st.quantrimang.com/photos/image/2018/11/20/bai-tap-javascript-200.jpg', '#'),
('JS6', 'JAVASCRIPT', 'DEMO', 'DEMO', 'DEMO', 'DEMO', 'expert', 'https://st.quantrimang.com/photos/image/2018/11/20/bai-tap-javascript-200.jpg', '#'),
('JS7', 'JAVASCRIPT', 'DEMO', 'DEMO', 'DEMO', 'DEMO', 'expert', 'https://st.quantrimang.com/photos/image/2018/11/20/bai-tap-javascript-200.jpg', '#'),
('JS8', 'JAVASCRIPT', 'DEMO', 'DEMO', 'DEMO', 'DEMO', 'expert', 'https://st.quantrimang.com/photos/image/2018/11/20/bai-tap-javascript-200.jpg', '#'),
('HTML5', 'HTML', 'DEMO', 'DEMO', 'DEMO', 'DEMO', 'expert', 'https://laptrinhphp.info/uploads/images/Bai-Viet/PHP-can-ban/html5.png', '#'),
('HTML6', 'HTML', 'DEMO', 'DEMO', 'DEMO', 'DEMO', 'expert', 'https://laptrinhphp.info/uploads/images/Bai-Viet/PHP-can-ban/html5.png', '#'),
('HTML7', 'HTML', 'DEMO', 'DEMO', 'DEMO', 'DEMO', 'expert', 'https://laptrinhphp.info/uploads/images/Bai-Viet/PHP-can-ban/html5.png', '#'),
('HTML8', 'HTML', 'DEMO', 'DEMO', 'DEMO', 'DEMO', 'expert', 'https://laptrinhphp.info/uploads/images/Bai-Viet/PHP-can-ban/html5.png', '#');
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
